definitions:
  dto.BookCreateReq:
    properties:
      author:
        description: 作者
        example: 张三
        maxLength: 255
        minLength: 1
        type: string
      name:
        description: 书籍名称
        example: Go语言编程
        maxLength: 255
        minLength: 1
        type: string
      price:
        description: 价格
        example: 100
        minimum: 0.01
        type: number
    required:
    - author
    - name
    - price
    type: object
  dto.BookCreateRes:
    properties:
      id:
        description: 书籍id
        type: integer
    type: object
  dto.BookGetRes:
    properties:
      author:
        description: 作者
        type: string
      create_at:
        description: 创建时间
        type: string
      id:
        description: 书籍ID
        type: integer
      name:
        description: 书籍名称
        type: string
      price:
        description: 价格
        type: number
    type: object
  enum.Code:
    enum:
    - 200
    - 400
    - 401
    - 403
    - 404
    - 500
    type: integer
    x-enum-varnames:
    - OK
    - BadRequest
    - Unauthorized
    - Forbidden
    - HttpNotFound
    - InternalError
  response.Response:
    properties:
      code:
        $ref: '#/definitions/enum.Code'
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/book:
    get:
      consumes:
      - application/json
      description: 根据ID获取书籍信息
      parameters:
      - description: 书籍ID
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.BookGetRes'
              type: object
      summary: 获取书籍
      tags:
      - book
  /api/book/create:
    post:
      consumes:
      - application/json
      description: 创建新的书籍
      parameters:
      - description: 书籍信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.BookCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.BookCreateRes'
              type: object
      summary: 创建书籍
      tags:
      - book
swagger: "2.0"
